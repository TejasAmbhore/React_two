{"version":3,"sources":["Navbar.js","BlogList.js","Create.js","useFetch.js","Home.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","map","blog","id","title","author","Create","useState","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","JSON","stringify","then","push","type","required","value","onChange","target","useFetch","url","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","signal","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAkBeA,EAhBA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,yCACA,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAUC,MAAO,CACtBC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OAHlB,6BCcDC,EApBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAMhB,OACI,qBAAKP,UAAU,YAAf,SACCO,EAAMC,KAAI,SAAAC,GAAI,OACb,qBAAKT,UAAU,eAAf,SACE,eAAC,IAAD,CAAMC,GAAE,iBAAYQ,EAAKC,IAAzB,UACE,6BAAMD,EAAKE,QACX,4CAAgBF,EAAKG,cAHUH,EAAKC,U,cC2CnCG,EAnDA,WACb,MAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA4BH,mBAAS,SAArC,mBAAOF,EAAP,KAAeM,EAAf,KACMC,EAAUC,cAgBhB,OACE,sBAAKpB,UAAU,SAAf,UACE,gDACA,uBAAMqB,SAjBW,SAACC,GACpBA,EAAEC,iBACF,IAAMd,EAAO,CAAEE,QAAOK,OAAMJ,UAE5BY,MAAM,8BAA+B,CACnCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BV,KAAMW,KAAKC,UAAUnB,KACpBoB,MAAK,WAENV,EAAQW,KAAK,SAOb,UACE,gDACA,uBACEC,KAAK,OACLC,UAAQ,EACRC,MAAOtB,EACPuB,SAAU,SAACZ,GAAD,OAAOP,EAASO,EAAEa,OAAOF,UAErC,+CACA,0BACED,UAAQ,EACRC,MAAOjB,EACPkB,SAAU,SAACZ,GAAD,OAAOL,EAAQK,EAAEa,OAAOF,UAEpC,iDACA,yBACEA,MAAOrB,EACPsB,SAAU,SAACZ,GAAD,OAAOJ,EAAUI,EAAEa,OAAOF,QAFtC,UAIE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,IAAd,kBAEF,qDCNOG,EAxCE,SAACC,GACd,MAAwBvB,mBAAS,MAAjC,mBAAOwB,EAAP,KAAaC,EAAb,KACA,EAAkCzB,oBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAA0B3B,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KAkCA,OA9BAC,qBAAU,WACN,IAAMC,EAAY,IAAIC,gBA0BtB,OAxBAC,YAAW,WACPvB,MAAMa,EAAK,CAAEW,OAAQH,EAAUG,SAC1BnB,MAAK,SAAAoB,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,8CAEhB,OAAOF,EAAIG,UAEdvB,MAAK,SAAAS,GACFC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEZU,OAAM,SAAAC,GACc,eAAbA,EAAIC,KACJC,QAAQC,IAAI,kBAGZd,EAASW,EAAII,SACbjB,GAAa,SAG1B,KAEI,kBAAMI,EAAUc,WACxB,CAACtB,IAEG,CAAEC,OAAME,YAAWE,UC+BfkB,EA7CF,WA4BV,MAA0CxB,EAAS,+BAArC7B,EAAd,EAAQ+B,KAAaE,EAArB,EAAqBA,UAAWE,EAAhC,EAAgCA,MAE/B,OAOI,cANA,CAMA,OAAK1C,UAAU,OAAf,UACM0C,GAAS,8BAAOA,IAChBF,GAAa,6CACfjC,GAAS,cAAC,EAAD,CAAUA,MAAOA,EAAOI,MAAM,mBCjCpCkD,EA7BK,WAEhB,IAAQnD,EAAOoD,cAAPpD,GACR,EAAyC0B,EAAS,+BAAiC1B,GAArED,EAAd,EAAQ6B,KAAYI,EAApB,EAAoBA,MAAOF,EAA3B,EAA2BA,UACrBrB,EAAUC,cAShB,OACI,sBAAKpB,UAAU,eAAf,UACMwC,GAAa,6CACbE,GAAS,8BAAOA,IAChBjC,GACE,oCACI,6BAAMA,EAAKE,QACX,4CAAgBF,EAAKG,UACrB,8BAAOH,EAAKO,OACZ,wBAAQ+C,QAjBJ,WAChBvC,MAAM,8BAAgCf,EAAKC,GAAI,CAC3Ce,OAAO,WACPI,MAAK,WACLV,EAAQW,KAAK,SAaL,2BCTLkC,EAdE,WACb,OACI,sBAAKhE,UAAU,YAAf,UACI,2CACA,0DACA,cAAC,IAAD,CAAMC,GAAG,IAAIC,MACT,CACIC,MAAM,WAFd,sCCiDG8D,MAjDf,WAwBE,OACE,cAAC,IAAD,UACE,sBAAKjE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCnCCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5654b98.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h1>My Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\" style={{\r\n                    color: \"white\",\r\n                    backgroundColor: '#f1356d',\r\n                    borderRadius: '8px'\r\n                }}>New Blog</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs }) => {\r\n    // const blogs = props.blogs;\r\n    // const title = props.title;\r\n\r\n    // console.log(props,blogs);\r\n\r\n    return (\r\n        <div className=\"blog-list\">\r\n        {blogs.map(blog => (\r\n          <div className=\"blog-preview\" key={blog.id} >\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              <h2>{ blog.title }</h2>\r\n              <p>Written by { blog.author }</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default BlogList;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('Tejas');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n          type=\"text\" \r\n          required \r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"Tejas\">Tejas</option>\r\n          <option value=\"T\">T</option>\r\n        </select>\r\n        <button>Add Blog</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Create;","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // const [name, setName] = useState('Tejas');\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        setTimeout(() => {\r\n            fetch(url, { signal: abortCont.signal })\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw Error('could not fetch the data for that resource');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setData(data);\r\n                    setIsPending(false);\r\n                    setError(null);\r\n                })\r\n                .catch(err => {\r\n                    if (err.name === 'AbortError') {\r\n                        console.log('fetch aborted')\r\n                    }\r\n                    else {\r\n                        setError(err.message);\r\n                        setIsPending(false);\r\n                    }\r\n                })\r\n        }, 1000)\r\n\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n\r\n    return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","import BlogList from './BlogList';\r\nimport Create from './Create';\r\nimport useFetch from './useFetch';\r\n\r\n//const Home = () => {\r\n\r\n   // let name = 'Tejas';\r\n  // const [name, setName] = useState('Tejas');\r\n  // const [age, setAge] = useState(19);\r\n\r\n//const handleClick = () => {\r\n  //  setName('Teju');\r\n  //  setAge(11);\r\n// }\r\n\r\n\r\n//    return (\r\n      /*  <div className=\"home\">\r\n            <h2>Homepage</h2>\r\n            <p>{ name } is { age } years old</p>\r\n            <button onClick={handleClick}>Click Me</button>\r\n        </div>\r\n    );\r\n}*/\r\n\r\nconst Home = () => {\r\n   // const [blogs, setBlogs] = useState(null);\r\n   // const [isPending, setIsPending] = useState(true);\r\n   // const [error, setError] = useState(null);\r\n\r\n   // const [name, setName] = useState('Tejas');\r\n\r\n   // useEffect(() => {\r\n   //     setTimeout(() => {\r\n   //         fetch('http://localhost:8000/blogs')\r\n   //     .then(res => {\r\n   //         if(!res.ok){\r\n   //             throw Error('could not fetch the data for that resource');\r\n   //         }\r\n   //         return res.json();\r\n   //     })\r\n   //     .then((data) => {\r\n   //         setBlogs(data);\r\n   //         setIsPending(false);\r\n   //         setError(null);\r\n   //     })\r\n   //     .catch(err => {\r\n   //         setError(err.message);\r\n   //         setIsPending(false);\r\n   //     })\r\n   //     }, 1000);\r\n   // },[]);\r\n\r\n   const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs')\r\n\r\n    return (\r\n        /*<div className=\"home\">\r\n           <BlogList blogs={blogs} title=\"All Blogs!\"/>\r\n           {blogs && <BlogList blogs={blogs} title=\"All Blogs!\"/>}\r\n           <button onClick={() => setName('Teju')}>Change name</button>\r\n           <p>{ name }</p>\r\n    </div>*/\r\n        <div className=\"home\">\r\n            { error && <div>{ error }</div> }\r\n            { isPending && <div>Loading...</div> }\r\n           {blogs && <BlogList blogs={blogs} title=\"All Blogs!\"/>}\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n\r\n    const { id } = useParams()\r\n    const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id)\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs' + blog.id, {\r\n            method:'DELETE'\r\n        }) .then(() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div> }\r\n            { error && <div>{ error }</div> }\r\n            { blog && (\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written By { blog.author }</p>\r\n                    <div>{ blog.body }</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h1>404 error</h1>\r\n            <h2>This page doesn't exist.</h2>\r\n            <Link to=\"/\" style={\r\n                {\r\n                    color:'#f1356d',\r\n                }\r\n            }>Back to the Homepage</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  //const title = 'Welcome to the new blog';\n  //const likes = 50;\n  // const person = { name: 'Tejas', age: 19};\n  //const links = \"https://www.google.com\";\n\n  // return (\n  // <div className=\"App\">\n  // <div className=\"content\">\n  ///* <h1>{ title }</h1>\n  //<p>Liked { likes } times</p>\n\n  //{/* <p>{ person }</p> */}\n\n  //<p>{ 10 }</p>\n  //<p>{ \"Satshriakal Ji\" }</p>\n  //<p>{ [1,2,3,4,5]}</p>\n  //<p>{ Math.random()*10 }</p>\n\n  //<a href={ links }>Google</a> \n  //</div>\n  //</div>\n  //);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/React_two\">\n              <Home />\n            </Route>\n            <Route path=\"/React_two/create\">\n              <Create />\n            </Route>\n            <Route path=\"/React_two/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}